// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {

  accounts Account[]
  createdAt       DateTime @default(now())
  email           String?   @unique
  emailVerified   DateTime?
  favoriteIds     String[] @db.ObjectId
  hashedPassword  String?
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  image           String?
  listings Listing[]
  name            String?
  reservations Reservation[]
  updatedAt       DateTime @updatedAt
}

model Account {


  @@unique([provider, providerAccountId])
  access_token       String?  @db.String
  expires_at         Int?
  id String @id @default(auto()) @map("_id") @db.ObjectId
  id_token           String?  @db.String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String
  scope              String?
  session_state      String?
  token_type         String?
  type               String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId             String   @db.ObjectId
}

model Listing {
  bathroomCount Int
  category  String
  createdAt DateTime @default(now())
  description String
  guestCount Int
  id String @id @default(auto()) @map("_id") @db.ObjectId
  imageSrc String
  locationValue String
  price Int
  reservations Reservation[]
  roomCount Int
  title String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @db.ObjectId
}

model Reservation {
  createdAt DateTime @default(now())
  endDate DateTime
  id String @id @default(auto()) @map("_id") @db.ObjectId
  listing Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)
  listingId String @db.ObjectId  
  startDate DateTime
  totalPrice Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @db.ObjectId
}